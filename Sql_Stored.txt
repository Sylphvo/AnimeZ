/* Stored procedure: tạo film + film_version + nhiều assets (SQL Server)
   Input: 3 JSON strings: film, version (single object), assets (array of objects)
   Output: result set chứa film_id, version_id, assets_inserted
*/
CREATE OR ALTER PROCEDURE dbo.sp_create_film_with_version_and_assets
  @film_json   NVARCHAR(MAX),
  @version_json NVARCHAR(MAX),
  @assets_json  NVARCHAR(MAX)
AS
BEGIN
  SET NOCOUNT ON;

  DECLARE @film_id UNIQUEIDENTIFIER = NEWID();
  DECLARE @version_id UNIQUEIDENTIFIER = NEWID();
  DECLARE @assets_count INT = 0;

  BEGIN TRY
    BEGIN TRAN;

    /* Insert film (map expected JSON keys to columns) */
    INSERT INTO dbo.films (
      id, title_original, title_local, alternate_titles, [year], country,
      language_primary, director, producers, main_cast, genre,
      duration_seconds, synopsis_short, synopsis_long, tags,
      production_company, external_ids, rating, release_date, status, created_by
    )
    SELECT
      @film_id,
      f.title_original,
      f.title_local,
      f.alternate_titles,
      f.[year],
      f.country,
      f.language_primary,
      f.director,
      f.producers,
      f.main_cast,
      f.genre,
      f.duration_seconds,
      f.synopsis_short,
      f.synopsis_long,
      f.tags,
      f.production_company,
      f.external_ids,
      f.rating,
      TRY_CAST(f.release_date AS DATE),
      ISNULL(f.status,'draft'),
      TRY_CAST(NULLIF(f.created_by,'') AS UNIQUEIDENTIFIER)
    FROM OPENJSON(@film_json) WITH (
      title_original NVARCHAR(500) '$.title_original',
      title_local NVARCHAR(500) '$.title_local',
      alternate_titles NVARCHAR(MAX) '$.alternate_titles' AS JSON,
      [year] INT '$.year',
      country NVARCHAR(200) '$.country',
      language_primary NVARCHAR(200) '$.language_primary',
      director NVARCHAR(300) '$.director',
      producers NVARCHAR(MAX) '$.producers' AS JSON,
      main_cast NVARCHAR(MAX) '$.main_cast' AS JSON,
      genre NVARCHAR(MAX) '$.genre' AS JSON,
      duration_seconds INT '$.duration_seconds',
      synopsis_short NVARCHAR(1000) '$.synopsis_short',
      synopsis_long NVARCHAR(MAX) '$.synopsis_long',
      tags NVARCHAR(MAX) '$.tags' AS JSON,
      production_company NVARCHAR(300) '$.production_company',
      external_ids NVARCHAR(MAX) '$.external_ids' AS JSON,
      rating NVARCHAR(50) '$.rating',
      release_date NVARCHAR(50) '$.release_date',
      status NVARCHAR(50) '$.status',
      created_by NVARCHAR(50) '$.created_by'
    ) AS f;

    /* Insert version */
    INSERT INTO dbo.film_versions (
      version_id, film_id, version_name, file_name, storage_url,
      file_size_bytes, container, video_codec, video_bitrate, resolution,
      aspect_ratio, framerate, duration_seconds, audio_format, audio_channels,
      audio_track_map, subtitles, closed_captions, checksum, mezzanine, qc_status, ingest_date
    )
    SELECT
      @version_id,
      @film_id,
      v.version_name,
      v.file_name,
      v.storage_url,
      v.file_size_bytes,
      v.container,
      v.video_codec,
      v.video_bitrate,
      v.resolution,
      v.aspect_ratio,
      TRY_CAST(v.framerate AS DECIMAL(8,3)),
      v.duration_seconds,
      v.audio_format,
      v.audio_channels,
      v.audio_track_map,
      v.subtitles,
      CASE WHEN TRY_CAST(v.closed_captions AS INT) = 1 THEN 1 ELSE 0 END,
      v.checksum,
      CASE WHEN TRY_CAST(v.mezzanine AS INT) = 1 THEN 1 ELSE 0 END,
      ISNULL(v.qc_status,'pending'),
      TRY_CAST(v.ingest_date AS DATETIMEOFFSET)
    FROM OPENJSON(@version_json) WITH (
      version_name NVARCHAR(200) '$.version_name',
      file_name NVARCHAR(500) '$.file_name',
      storage_url NVARCHAR(1000) '$.storage_url',
      file_size_bytes BIGINT '$.file_size_bytes',
      container NVARCHAR(100) '$.container',
      video_codec NVARCHAR(100) '$.video_codec',
      video_bitrate BIGINT '$.video_bitrate',
      resolution NVARCHAR(50) '$.resolution',
      aspect_ratio NVARCHAR(50) '$.aspect_ratio',
      framerate NVARCHAR(50) '$.framerate',
      duration_seconds INT '$.duration_seconds',
      audio_format NVARCHAR(100) '$.audio_format',
      audio_channels NVARCHAR(50) '$.audio_channels',
      audio_track_map NVARCHAR(MAX) '$.audio_track_map' AS JSON,
      subtitles NVARCHAR(MAX) '$.subtitles' AS JSON,
      closed_captions NVARCHAR(10) '$.closed_captions',
      checksum NVARCHAR(128) '$.checksum',
      mezzanine NVARCHAR(10) '$.mezzanine',
      qc_status NVARCHAR(50) '$.qc_status',
      ingest_date NVARCHAR(50) '$.ingest_date'
    ) AS v;

    /* Insert assets (assets_json expected as array of objects) */
    INSERT INTO dbo.assets (
      asset_id, film_id, asset_type, title, file_name, file_url,
      resolution, file_size_bytes, language, checksum, usage_restrictions
    )
    SELECT
      NEWID(),
      @film_id,
      a.asset_type,
      a.title,
      a.file_name,
      a.file_url,
      a.resolution,
      a.file_size_bytes,
      a.language,
      a.checksum,
      a.usage_restrictions
    FROM OPENJSON(@assets_json) WITH (
      asset_type NVARCHAR(100) '$.asset_type',
      title NVARCHAR(500) '$.title',
      file_name NVARCHAR(500) '$.file_name',
      file_url NVARCHAR(1000) '$.file_url',
      resolution NVARCHAR(50) '$.resolution',
      file_size_bytes BIGINT '$.file_size_bytes',
      language NVARCHAR(50) '$.language',
      checksum NVARCHAR(128) '$.checksum',
      usage_restrictions NVARCHAR(MAX) '$.usage_restrictions'
    ) AS a;

    SET @assets_count = @@ROWCOUNT;

    COMMIT TRAN;

    /* Return summary */
    SELECT
      CAST(@film_id AS NVARCHAR(36)) AS film_id,
      CAST(@version_id AS NVARCHAR(36)) AS version_id,
      @assets_count AS assets_inserted;

  END TRY
  BEGIN CATCH
    IF XACT_STATE() <> 0
      ROLLBACK TRAN;

    DECLARE @errnum INT = ERROR_NUMBER();
    DECLARE @errmsg NVARCHAR(4000) = ERROR_MESSAGE();
    RAISERROR('sp_create_film_with_version_and_assets failed: %d - %s', 16, 1, @errnum, @errmsg);
    RETURN -1;
  END CATCH
END;
GO
