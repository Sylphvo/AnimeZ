{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/phuvm/source/repos/AnimeZ/src/components/characters/loadCharacter.ts"],"sourcesContent":["import * as THREE from 'three'\r\n\r\nexport type LoadedCharacter = {\r\n  group: THREE.Group\r\n  mixer?: THREE.AnimationMixer\r\n  actions?: Map<string, THREE.AnimationAction>\r\n}\r\n\r\n/**\r\n * Load character glTF from /models/character.glb\r\n * Returns { group, mixer, actions } or throws.\r\n */\r\nexport async function loadCharacter(scene: THREE.Scene, startPosition: THREE.Vector3): Promise<LoadedCharacter> {\r\n  // dynamic import to avoid bundler/ts issues\r\n  // @ts-ignore\r\n  const { GLTFLoader } = await import('three/examples/jsm/loaders/GLTFLoader')\r\n  const loader = new GLTFLoader()\r\n  const gltf = await loader.loadAsync('/models/character.glb')\r\n\r\n  const root = gltf.scene || new THREE.Group()\r\n  root.position.copy(startPosition)\r\n\r\n  // ensure shadows and convert materials to standard where useful\r\n  root.traverse((c: any) => {\r\n    if (c.isMesh) {\r\n      c.castShadow = true\r\n      c.receiveShadow = true\r\n      try {\r\n        if (!(c.material instanceof THREE.MeshStandardMaterial)) {\r\n          const old = c.material\r\n          const mat = new THREE.MeshStandardMaterial({\r\n            map: old.map || null,\r\n            color: old.color || new THREE.Color(0xffffff)\r\n          })\r\n          ;(mat as any).skinning = !!(c as any).skinned\r\n          c.material = mat\r\n        }\r\n      } catch {}\r\n    }\r\n  })\r\n\r\n  scene.add(root)\r\n\r\n  const result: LoadedCharacter = { group: root }\r\n\r\n  if ((gltf as any).animations && (gltf as any).animations.length > 0) {\r\n    const mixer = new THREE.AnimationMixer(root)\r\n    const actions = new Map<string, THREE.AnimationAction>()\r\n    for (const clip of (gltf as any).animations) {\r\n      const name = clip.name || clip.uuid\r\n      const action = mixer.clipAction(clip)\r\n      action.clampWhenFinished = true\r\n      action.enabled = true\r\n      actions.set(name, action)\r\n    }\r\n    result.mixer = mixer\r\n    result.actions = actions\r\n    // play Idle if present\r\n    const idle = actions.get('Idle') || actions.get('idle') || actions.values().next().value\r\n    if (idle) idle.play()\r\n  }\r\n\r\n  return result\r\n}"],"names":[],"mappings":";;;AAAA;;AAYO,eAAe,cAAc,KAAkB,EAAE,aAA4B;IAClF,4CAA4C;IAC5C,aAAa;IACb,MAAM,EAAE,UAAU,EAAE,GAAG;IACvB,MAAM,SAAS,IAAI;IACnB,MAAM,OAAO,MAAM,OAAO,SAAS,CAAC;IAEpC,MAAM,OAAO,KAAK,KAAK,IAAI,IAAI,+IAAA,CAAA,QAAW;IAC1C,KAAK,QAAQ,CAAC,IAAI,CAAC;IAEnB,gEAAgE;IAChE,KAAK,QAAQ,CAAC,CAAC;QACb,IAAI,EAAE,MAAM,EAAE;YACZ,EAAE,UAAU,GAAG;YACf,EAAE,aAAa,GAAG;YAClB,IAAI;gBACF,IAAI,CAAC,CAAC,EAAE,QAAQ,YAAY,+IAAA,CAAA,uBAA0B,GAAG;oBACvD,MAAM,MAAM,EAAE,QAAQ;oBACtB,MAAM,MAAM,IAAI,+IAAA,CAAA,uBAA0B,CAAC;wBACzC,KAAK,IAAI,GAAG,IAAI;wBAChB,OAAO,IAAI,KAAK,IAAI,IAAI,+IAAA,CAAA,QAAW,CAAC;oBACtC;oBACE,IAAY,QAAQ,GAAG,CAAC,CAAC,AAAC,EAAU,OAAO;oBAC7C,EAAE,QAAQ,GAAG;gBACf;YACF,EAAE,OAAM,CAAC;QACX;IACF;IAEA,MAAM,GAAG,CAAC;IAEV,MAAM,SAA0B;QAAE,OAAO;IAAK;IAE9C,IAAI,AAAC,KAAa,UAAU,IAAI,AAAC,KAAa,UAAU,CAAC,MAAM,GAAG,GAAG;QACnE,MAAM,QAAQ,IAAI,+IAAA,CAAA,iBAAoB,CAAC;QACvC,MAAM,UAAU,IAAI;QACpB,KAAK,MAAM,QAAQ,AAAC,KAAa,UAAU,CAAE;YAC3C,MAAM,OAAO,KAAK,IAAI,IAAI,KAAK,IAAI;YACnC,MAAM,SAAS,MAAM,UAAU,CAAC;YAChC,OAAO,iBAAiB,GAAG;YAC3B,OAAO,OAAO,GAAG;YACjB,QAAQ,GAAG,CAAC,MAAM;QACpB;QACA,OAAO,KAAK,GAAG;QACf,OAAO,OAAO,GAAG;QACjB,uBAAuB;QACvB,MAAM,OAAO,QAAQ,GAAG,CAAC,WAAW,QAAQ,GAAG,CAAC,WAAW,QAAQ,MAAM,GAAG,IAAI,GAAG,KAAK;QACxF,IAAI,MAAM,KAAK,IAAI;IACrB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/phuvm/source/repos/AnimeZ/src/components/PlayerContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useRef } from 'react'\r\nimport * as THREE from 'three'\r\n\r\ntype PlayerState = {\r\n  playerRef: React.MutableRefObject<THREE.Vector3>\r\n}\r\n\r\nconst defaultPlayer: PlayerState = {\r\n  playerRef: { current: new THREE.Vector3(0, 1.6, 0) },\r\n} as any\r\n\r\nconst PlayerContext = createContext<PlayerState>(defaultPlayer)\r\n\r\nexport const PlayerProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const playerRef = useRef(new THREE.Vector3(0, 1.6, 0))\r\n  return <PlayerContext.Provider value={{ playerRef }}>{children}</PlayerContext.Provider>\r\n}\r\n\r\nexport function usePlayer() {\r\n  return useContext(PlayerContext)\r\n}"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAMA,MAAM,gBAA6B;IACjC,WAAW;QAAE,SAAS,IAAI,+IAAA,CAAA,UAAa,CAAC,GAAG,KAAK;IAAG;AACrD;AAEA,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAe;AAE1C,MAAM,iBAA0D,CAAC,EAAE,QAAQ,EAAE;IAClF,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE,IAAI,+IAAA,CAAA,UAAa,CAAC,GAAG,KAAK;IACnD,qBAAO,8OAAC,cAAc,QAAQ;QAAC,OAAO;YAAE;QAAU;kBAAI;;;;;;AACxD;AAEO,SAAS;IACd,OAAO,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;AACpB","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/phuvm/source/repos/AnimeZ/src/components/TeaGardenExplorer.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React, { useEffect, useRef, useState, useMemo } from 'react'\r\nimport { Canvas, useFrame, useThree } from '@react-three/fiber'\r\nimport * as THREE from 'three'\r\nimport { loadCharacter } from './characters/loadCharacter'\r\nimport { usePlayer, PlayerProvider } from './PlayerContext'\r\n\r\n// ---------------------- SceneContent (runs inside Canvas) ----------------------\r\nfunction SceneContent({ materials, thirdPerson, modelPath }: { materials: any; thirdPerson: boolean; modelPath?: string }) {\r\n   const { camera, scene } = useThree()\r\n   const player = usePlayer()\r\n   const { playerRef } = player\r\n\r\n   const characterGroupRef = useRef<THREE.Group | null>(null)\r\n   const mixerRef = useRef<THREE.AnimationMixer | null>(null)\r\n   const actionsRef = useRef<Map<string, THREE.AnimationAction> | null>(null)\r\n   const clockRef = useRef(new THREE.Clock())\r\n\r\n   const movementRef = useRef({\r\n     forward: false,\r\n     backward: false,\r\n     left: false,\r\n     right: false,\r\n     shift: false,\r\n     jump: false,\r\n   })\r\n\r\n   const mouseRef = useRef({ phi: 0, theta: 0 })\r\n\r\n   // pointer lock on click\r\n   useEffect(() => {\r\n     const onClick = () => {\r\n       const el = document.getElementById('root-canvas') || document.body\r\n       el.requestPointerLock?.()\r\n     }\r\n     window.addEventListener('click', onClick)\r\n     return () => window.removeEventListener('click', onClick)\r\n   }, [])\r\n\r\n   // key handlers\r\n   useEffect(() => {\r\n     const onKeyDown = (e: KeyboardEvent) => {\r\n       switch (e.code) {\r\n         case 'KeyW':\r\n         case 'ArrowUp':\r\n           movementRef.current.forward = true\r\n           break\r\n         case 'KeyS':\r\n         case 'ArrowDown':\r\n           movementRef.current.backward = true\r\n           break\r\n         case 'KeyA':\r\n         case 'ArrowLeft':\r\n           movementRef.current.left = true\r\n           break\r\n         case 'KeyD':\r\n         case 'ArrowRight':\r\n           movementRef.current.right = true\r\n           break\r\n         case 'ShiftLeft':\r\n         case 'ShiftRight':\r\n           movementRef.current.shift = true\r\n           break\r\n         case 'Space':\r\n           movementRef.current.jump = true\r\n           break\r\n       }\r\n     }\r\n     const onKeyUp = (e: KeyboardEvent) => {\r\n       switch (e.code) {\r\n         case 'KeyW':\r\n         case 'ArrowUp':\r\n           movementRef.current.forward = false\r\n           break\r\n         case 'KeyS':\r\n         case 'ArrowDown':\r\n           movementRef.current.backward = false\r\n           break\r\n         case 'KeyA':\r\n         case 'ArrowLeft':\r\n           movementRef.current.left = false\r\n           break\r\n         case 'KeyD':\r\n         case 'ArrowRight':\r\n           movementRef.current.right = false\r\n           break\r\n         case 'ShiftLeft':\r\n         case 'ShiftRight':\r\n           movementRef.current.shift = false\r\n           break\r\n         case 'Space':\r\n           movementRef.current.jump = false\r\n           break\r\n       }\r\n     }\r\n     window.addEventListener('keydown', onKeyDown)\r\n     window.addEventListener('keyup', onKeyUp)\r\n     return () => {\r\n       window.removeEventListener('keydown', onKeyDown)\r\n       window.removeEventListener('keyup', onKeyUp)\r\n     }\r\n   }, [])\r\n\r\n   // mouse movement to control look\r\n   useEffect(() => {\r\n     const onMouseMove = (e: MouseEvent) => {\r\n       if (document.pointerLockElement) {\r\n         mouseRef.current.theta -= e.movementX * 0.002\r\n         mouseRef.current.phi -= e.movementY * 0.002\r\n         mouseRef.current.phi = Math.max(-Math.PI / 2, Math.min(Math.PI / 2, mouseRef.current.phi))\r\n       }\r\n     }\r\n     window.addEventListener('mousemove', onMouseMove)\r\n     return () => window.removeEventListener('mousemove', onMouseMove)\r\n   }, [])\r\n\r\n   // load character into scene\r\n   useEffect(() => {\r\n     let mounted = true\r\n     ;(async () => {\r\n       try {\r\n         // remove previous if any\r\n         if (characterGroupRef.current) {\r\n           try { scene.remove(characterGroupRef.current) } catch {}\r\n           characterGroupRef.current = null\r\n         }\r\n         const url = modelPath ? '/models/character.glb' : '/models/Duck.gltf';\r\n         const res = await loadCharacter(scene, playerRef.current.clone(), url)\r\n         if (!mounted) return\r\n         characterGroupRef.current = res.group\r\n         if (res.mixer) mixerRef.current = res.mixer\r\n         if (res.actions) actionsRef.current = res.actions\r\n         if (characterGroupRef.current) characterGroupRef.current.visible = thirdPerson\r\n       } catch (err) {\r\n         console.error('[SceneContent] loadCharacter failed', modelPath, err)\r\n         const g = new THREE.Group()\r\n         const body = new THREE.BoxGeometry(0.6, 1.6, 0.4)\r\n         const mat = new THREE.MeshStandardMaterial({ color: 0x996644 })\r\n         const mesh = new THREE.Mesh(body, mat)\r\n         mesh.castShadow = true\r\n         mesh.position.set(0, 0.8, 0)\r\n         g.add(mesh)\r\n         g.position.copy(playerRef.current)\r\n         scene.add(g)\r\n         characterGroupRef.current = g\r\n         characterGroupRef.current.visible = thirdPerson\r\n       }\r\n     })()\r\n     return () => { mounted = false }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [scene, modelPath, thirdPerson])\r\n\r\n   // per-frame update\r\n   useFrame((state, dt) => {\r\n     // update mixer\r\n     if (mixerRef.current) mixerRef.current.update(dt)\r\n\r\n     // Movement and camera control\r\n     const speed = movementRef.current.shift ? 4.0 * dt : 2.0 * dt\r\n     const forward = new THREE.Vector3()\r\n     camera.getWorldDirection(forward)\r\n     forward.y = 0\r\n     forward.normalize()\r\n     const right = new THREE.Vector3().crossVectors(forward, new THREE.Vector3(0, 1, 0)).normalize()\r\n\r\n     if (movementRef.current.forward) playerRef.current.addScaledVector(forward, speed)\r\n     if (movementRef.current.backward) playerRef.current.addScaledVector(forward, -speed)\r\n     if (movementRef.current.left) playerRef.current.addScaledVector(right, -speed)\r\n     if (movementRef.current.right) playerRef.current.addScaledVector(right, speed)\r\n\r\n     // camera control: first-person or third-person\r\n     const EYE_HEIGHT = 1.6\r\n     if (thirdPerson) {\r\n       // third-person: camera behind and above player\r\n       const back = new THREE.Vector3(0, 0, 1).applyEuler(new THREE.Euler(0, mouseRef.current.theta, 0))\r\n       const camPos = playerRef.current.clone().addScaledVector(back.normalize(), 3) // 3 units back\r\n       camPos.y = playerRef.current.y + 1.6\r\n       camera.position.lerp(camPos, 0.15)\r\n       camera.lookAt(playerRef.current.x, playerRef.current.y + 1.0, playerRef.current.z)\r\n       // show character model\r\n       if (characterGroupRef.current) characterGroupRef.current.visible = true\r\n     } else {\r\n       // first-person\r\n       camera.position.copy(playerRef.current)\r\n       camera.position.y = EYE_HEIGHT\r\n       camera.rotation.order = 'YXZ'\r\n       camera.rotation.x = mouseRef.current.phi\r\n       camera.rotation.y = mouseRef.current.theta\r\n       camera.rotation.z = 0\r\n       // hide character model\r\n       if (characterGroupRef.current) characterGroupRef.current.visible = false\r\n     }\r\n\r\n     // sync character root (smooth follow)\r\n     if (characterGroupRef.current) {\r\n       const char = characterGroupRef.current\r\n       const target = new THREE.Vector3(playerRef.current.x, 0, playerRef.current.z)\r\n       char.position.lerp(target, 0.2)\r\n       char.rotation.y = mouseRef.current.theta\r\n     }\r\n   })\r\n\r\n   return null\r\n}\r\n\r\n// ---------------------- Helpers (create textures/materials/scene helpers) ----------------------\r\nconst CHUNK_SIZE = 50\r\n\r\nexport function createTextures() {\r\n  const canvas = document.createElement('canvas')\r\n  canvas.width = 256\r\n  canvas.height = 256\r\n  const context = canvas.getContext('2d')!\r\n  context.fillStyle = '#3a5f3a'\r\n  context.fillRect(0, 0, 256, 256)\r\n  for (let i = 0; i < 1000; i++) {\r\n    context.fillStyle = `hsl(${80 + Math.random() * 20}, 50%, ${30 + Math.random() * 20}%)`\r\n    context.fillRect(Math.random() * 256, Math.random() * 256, 1, 1)\r\n  }\r\n  const grassTexture = new THREE.CanvasTexture(canvas)\r\n  grassTexture.wrapS = THREE.RepeatWrapping\r\n  grassTexture.wrapT = THREE.RepeatWrapping\r\n  grassTexture.repeat.set(10, 10)\r\n  return { grassTexture }\r\n}\r\n\r\nexport function createMaterials(textures: any) {\r\n  return {\r\n    grass: new THREE.MeshLambertMaterial({ color: 0x3a5f3a, map: textures.grassTexture }),\r\n    mossyGrass: new THREE.MeshLambertMaterial({ color: 0x4a6f4a }),\r\n    water: new THREE.MeshPhongMaterial({\r\n      color: 0x4682B4,\r\n      shininess: 100,\r\n      transparent: true,\r\n      opacity: 0.8\r\n    }),\r\n    stone: new THREE.MeshLambertMaterial({ color: 0x808080 }),\r\n    wood: new THREE.MeshLambertMaterial({ color: 0x8B4513 }),\r\n    trunk: new THREE.MeshLambertMaterial({ color: 0x4a3c28 }),\r\n    lantern: new THREE.MeshPhongMaterial({\r\n      color: 0xff6b35,\r\n      emissive: 0xff6b35,\r\n      emissiveIntensity: 0.2\r\n    }),\r\n    teaPlant: new THREE.MeshLambertMaterial({ color: 0x228B22 })\r\n  }\r\n}\r\n\r\n// Ground (as a simple mesh component for Canvas children)\r\nexport function Ground({ materials }: { materials: any }) {\r\n  return (\r\n    <mesh rotation-x={-Math.PI / 2} receiveShadow position={[0, 0, 0]}>\r\n      <planeGeometry args={[CHUNK_SIZE * 2, CHUNK_SIZE * 2]} />\r\n      <meshStandardMaterial color={(materials.mossyGrass as any)?.color || 0x6b8b3b} />\r\n    </mesh>\r\n  )\r\n}\r\n\r\n// Trees component (for Canvas children)\r\nexport function Trees({ materials, count = 60, spread = CHUNK_SIZE }: { materials: any; count?: number; spread?: number }) {\r\n  const positions = useRef<Array<[number, number, number]>>([])\r\n  if (positions.current.length === 0) {\r\n    for (let i = 0; i < count; i++) {\r\n      positions.current.push([(Math.random() - 0.5) * spread * 2, 0, (Math.random() - 0.5) * spread * 2])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <group>\r\n      {positions.current.map((p, i) => {\r\n        const s = 0.8 + Math.random() * 0.8\r\n        return (\r\n          <group key={i} position={p} scale={[s, s, s]} rotation-y={Math.random() * Math.PI * 2}>\r\n            <mesh position={[0, 1, 0]} castShadow receiveShadow>\r\n              <cylinderGeometry args={[0.18, 0.25, 2, 8]} />\r\n              <meshStandardMaterial color={(materials.trunk as any)?.color || 0x4a3c28} />\r\n            </mesh>\r\n            <mesh position={[0, 2.2, 0]} castShadow receiveShadow>\r\n              <coneGeometry args={[1.2, 2, 8]} />\r\n              <meshStandardMaterial color={(materials.teaPlant as any)?.color || 0x2d5a27} />\r\n            </mesh>\r\n            <mesh position={[0, 3.05, 0]} castShadow receiveShadow>\r\n              <coneGeometry args={[0.8, 1.4, 8]} />\r\n              <meshStandardMaterial color={(materials.teaPlant as any)?.color || 0x3a6b32} />\r\n            </mesh>\r\n          </group>\r\n        )\r\n      })}\r\n    </group>\r\n  )\r\n}\r\n\r\n// Hands component attaches to camera (R3F child)\r\nexport function Hands({ materials }: { materials: any }) {\r\n  const groupRef = useRef<THREE.Group | null>(null)\r\n  const { camera } = useThree()\r\n\r\n  useEffect(() => {\r\n    const g = groupRef.current!\r\n    camera.add(g)\r\n    g.position.set(0, -0.25, -0.5)\r\n    return () => {\r\n      try { camera.remove(g) } catch {}\r\n    }\r\n  }, [camera])\r\n\r\n  const mat = (materials.wood as any) || new THREE.MeshStandardMaterial({ color: 0xd1a17a })\r\n\r\n  return (\r\n    <group ref={groupRef}>\r\n      <mesh position={[-0.18, 0, -0.15]} castShadow>\r\n        <boxGeometry args={[0.18, 0.18, 0.5]} />\r\n        <meshStandardMaterial {...(mat as any)} />\r\n      </mesh>\r\n      <mesh position={[-0.18, -0.12, -0.4]} castShadow>\r\n        <boxGeometry args={[0.14, 0.08, 0.2]} />\r\n        <meshStandardMaterial {...(mat as any)} />\r\n      </mesh>\r\n      <mesh position={[0.18, 0, -0.15]} castShadow>\r\n        <boxGeometry args={[0.18, 0.18, 0.5]} />\r\n        <meshStandardMaterial {...(mat as any)} />\r\n      </mesh>\r\n      <mesh position={[0.18, -0.12, -0.4]} castShadow>\r\n        <boxGeometry args={[0.14, 0.08, 0.2]} />\r\n        <meshStandardMaterial {...(mat as any)} />\r\n      </mesh>\r\n    </group>\r\n  )\r\n}\r\n\r\n// ---------------------- Entry component (Canvas wrapper) ----------------------\r\nexport default function TeaGardenExplorer() {\r\n  const textures = useMemo(() => createTextures(), [])\r\n  const materials = useMemo(() => createMaterials(textures), [textures])\r\n\r\n   // lightweight loading flag (optional)\r\n  const [isReady, setIsReady] = useState(true)\r\n\r\n   // third-person toggle\r\n  const [thirdPerson, setThirdPerson] = useState(false)\r\n\r\n   // models list + selected model\r\n  const [models] = useState<string[]>([\"characters.glb\", \"Duck.gltf\"]);\r\n  const [selected, setSelected] = useState<string>(models[0]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelected(e.target.value);\r\n  };\r\n\r\n  //  useEffect(() => {\r\n  //    let mounted = true\r\n  //    ;(async () => {\r\n  //      try {\r\n  //        const res = await fetch('/api/models')\r\n  //        const data = await res.json()\r\n  //        if (!mounted) return\r\n  //        const files: string[] = Array.isArray(data.files) ? data.files : []\r\n  //        setModels(files)\r\n  //        if (files.length > 0) setSelectedModel(files[0])\r\n  //      } catch (err) {\r\n  //        console.error('failed to fetch models', err)\r\n  //      }\r\n  //    })()\r\n  //    return () => { mounted = false }\r\n  //  }, [])\r\n\r\n   useEffect(() => {\r\n     // if you need async material/texture loading, set isReady when done\r\n     setIsReady(true)\r\n   }, [])\r\n\r\n   if (!isReady) return <div style={{ width: '100%', height: '100%' }} />\r\n   \r\n   return (\r\n     <PlayerProvider>\r\n       <div style={{ width: '100%', height: '100vh', position: 'relative' }}>\r\n         <Canvas id=\"root-canvas\" shadows camera={{ position: [0, 1.6, 0], fov: 75 }}>\r\n           <ambientLight intensity={0.6} />\r\n           <directionalLight position={[50, 50, 25]} intensity={1.0} castShadow />\r\n           {/* pass modelPath to SceneContent */}\r\n           <SceneContent materials={materials} thirdPerson={thirdPerson} modelPath={ selected ? `/models/${selected}` : undefined } />\r\n           <Ground materials={materials} />\r\n           <Trees materials={materials} count={80} spread={CHUNK_SIZE} />\r\n           {!thirdPerson && <Hands materials={materials} />}\r\n         </Canvas>\r\n\r\n         {/* UI overlay for toggles */}\r\n         <div style={{ position: 'absolute', top: 12, right: 12, background: 'rgba(0,0,0,0.5)', padding: 8, borderRadius: 6, color: 'white' }}>\r\n           <label style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\r\n             <input type=\"checkbox\" checked={thirdPerson} onChange={() => setThirdPerson(v => !v)} />\r\n             <span style={{ fontSize: 12 }}>Third-person</span>\r\n           </label>\r\n           <div style={{ marginTop: 8 }}>\r\n             <label style={{ fontSize: 12 }}>Character:</label>\r\n             <select value={selected} onChange={handleChange} style={{ display: 'block', marginTop: 4 }}>\r\n               <option value=\"\">(default)</option>\r\n                {models.map(m => (\r\n                  <option key={m} value={m}>{m}</option>\r\n                ))}\r\n             </select>\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </PlayerProvider>\r\n   )\r\n }\r\n"],"names":[],"mappings":";;;;;;;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AANA;;;;;;;AAQA,kFAAkF;AAClF,SAAS,aAAa,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAgE;IACtH,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD;IACjC,MAAM,SAAS,CAAA,GAAA,mIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,SAAS,EAAE,GAAG;IAEtB,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAsB;IACrD,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAA+B;IACrD,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAA6C;IACrE,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE,IAAI,+IAAA,CAAA,QAAW;IAEvC,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;QACzB,SAAS;QACT,UAAU;QACV,MAAM;QACN,OAAO;QACP,OAAO;QACP,MAAM;IACR;IAEA,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;QAAE,KAAK;QAAG,OAAO;IAAE;IAE3C,wBAAwB;IACxB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,UAAU;YACd,MAAM,KAAK,SAAS,cAAc,CAAC,kBAAkB,SAAS,IAAI;YAClE,GAAG,kBAAkB;QACvB;QACA,OAAO,gBAAgB,CAAC,SAAS;QACjC,OAAO,IAAM,OAAO,mBAAmB,CAAC,SAAS;IACnD,GAAG,EAAE;IAEL,eAAe;IACf,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY,CAAC;YACjB,OAAQ,EAAE,IAAI;gBACZ,KAAK;gBACL,KAAK;oBACH,YAAY,OAAO,CAAC,OAAO,GAAG;oBAC9B;gBACF,KAAK;gBACL,KAAK;oBACH,YAAY,OAAO,CAAC,QAAQ,GAAG;oBAC/B;gBACF,KAAK;gBACL,KAAK;oBACH,YAAY,OAAO,CAAC,IAAI,GAAG;oBAC3B;gBACF,KAAK;gBACL,KAAK;oBACH,YAAY,OAAO,CAAC,KAAK,GAAG;oBAC5B;gBACF,KAAK;gBACL,KAAK;oBACH,YAAY,OAAO,CAAC,KAAK,GAAG;oBAC5B;gBACF,KAAK;oBACH,YAAY,OAAO,CAAC,IAAI,GAAG;oBAC3B;YACJ;QACF;QACA,MAAM,UAAU,CAAC;YACf,OAAQ,EAAE,IAAI;gBACZ,KAAK;gBACL,KAAK;oBACH,YAAY,OAAO,CAAC,OAAO,GAAG;oBAC9B;gBACF,KAAK;gBACL,KAAK;oBACH,YAAY,OAAO,CAAC,QAAQ,GAAG;oBAC/B;gBACF,KAAK;gBACL,KAAK;oBACH,YAAY,OAAO,CAAC,IAAI,GAAG;oBAC3B;gBACF,KAAK;gBACL,KAAK;oBACH,YAAY,OAAO,CAAC,KAAK,GAAG;oBAC5B;gBACF,KAAK;gBACL,KAAK;oBACH,YAAY,OAAO,CAAC,KAAK,GAAG;oBAC5B;gBACF,KAAK;oBACH,YAAY,OAAO,CAAC,IAAI,GAAG;oBAC3B;YACJ;QACF;QACA,OAAO,gBAAgB,CAAC,WAAW;QACnC,OAAO,gBAAgB,CAAC,SAAS;QACjC,OAAO;YACL,OAAO,mBAAmB,CAAC,WAAW;YACtC,OAAO,mBAAmB,CAAC,SAAS;QACtC;IACF,GAAG,EAAE;IAEL,iCAAiC;IACjC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc,CAAC;YACnB,IAAI,SAAS,kBAAkB,EAAE;gBAC/B,SAAS,OAAO,CAAC,KAAK,IAAI,EAAE,SAAS,GAAG;gBACxC,SAAS,OAAO,CAAC,GAAG,IAAI,EAAE,SAAS,GAAG;gBACtC,SAAS,OAAO,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,EAAE,GAAG,GAAG,KAAK,GAAG,CAAC,KAAK,EAAE,GAAG,GAAG,SAAS,OAAO,CAAC,GAAG;YAC1F;QACF;QACA,OAAO,gBAAgB,CAAC,aAAa;QACrC,OAAO,IAAM,OAAO,mBAAmB,CAAC,aAAa;IACvD,GAAG,EAAE;IAEL,4BAA4B;IAC5B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,UAAU;QACb,CAAC;YACA,IAAI;gBACF,yBAAyB;gBACzB,IAAI,kBAAkB,OAAO,EAAE;oBAC7B,IAAI;wBAAE,MAAM,MAAM,CAAC,kBAAkB,OAAO;oBAAE,EAAE,OAAM,CAAC;oBACvD,kBAAkB,OAAO,GAAG;gBAC9B;gBACA,MAAM,MAAM,YAAY,0BAA0B;gBAClD,MAAM,MAAM,MAAM,CAAA,GAAA,gJAAA,CAAA,gBAAa,AAAD,EAAE,OAAO,UAAU,OAAO,CAAC,KAAK,IAAI;gBAClE,IAAI,CAAC,SAAS;gBACd,kBAAkB,OAAO,GAAG,IAAI,KAAK;gBACrC,IAAI,IAAI,KAAK,EAAE,SAAS,OAAO,GAAG,IAAI,KAAK;gBAC3C,IAAI,IAAI,OAAO,EAAE,WAAW,OAAO,GAAG,IAAI,OAAO;gBACjD,IAAI,kBAAkB,OAAO,EAAE,kBAAkB,OAAO,CAAC,OAAO,GAAG;YACrE,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,uCAAuC,WAAW;gBAChE,MAAM,IAAI,IAAI,+IAAA,CAAA,QAAW;gBACzB,MAAM,OAAO,IAAI,+IAAA,CAAA,cAAiB,CAAC,KAAK,KAAK;gBAC7C,MAAM,MAAM,IAAI,+IAAA,CAAA,uBAA0B,CAAC;oBAAE,OAAO;gBAAS;gBAC7D,MAAM,OAAO,IAAI,+IAAA,CAAA,OAAU,CAAC,MAAM;gBAClC,KAAK,UAAU,GAAG;gBAClB,KAAK,QAAQ,CAAC,GAAG,CAAC,GAAG,KAAK;gBAC1B,EAAE,GAAG,CAAC;gBACN,EAAE,QAAQ,CAAC,IAAI,CAAC,UAAU,OAAO;gBACjC,MAAM,GAAG,CAAC;gBACV,kBAAkB,OAAO,GAAG;gBAC5B,kBAAkB,OAAO,CAAC,OAAO,GAAG;YACtC;QACF,CAAC;QACD,OAAO;YAAQ,UAAU;QAAM;IAC/B,uDAAuD;IACzD,GAAG;QAAC;QAAO;QAAW;KAAY;IAElC,mBAAmB;IACnB,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAE,CAAC,OAAO;QACf,eAAe;QACf,IAAI,SAAS,OAAO,EAAE,SAAS,OAAO,CAAC,MAAM,CAAC;QAE9C,8BAA8B;QAC9B,MAAM,QAAQ,YAAY,OAAO,CAAC,KAAK,GAAG,MAAM,KAAK,MAAM;QAC3D,MAAM,UAAU,IAAI,+IAAA,CAAA,UAAa;QACjC,OAAO,iBAAiB,CAAC;QACzB,QAAQ,CAAC,GAAG;QACZ,QAAQ,SAAS;QACjB,MAAM,QAAQ,IAAI,+IAAA,CAAA,UAAa,GAAG,YAAY,CAAC,SAAS,IAAI,+IAAA,CAAA,UAAa,CAAC,GAAG,GAAG,IAAI,SAAS;QAE7F,IAAI,YAAY,OAAO,CAAC,OAAO,EAAE,UAAU,OAAO,CAAC,eAAe,CAAC,SAAS;QAC5E,IAAI,YAAY,OAAO,CAAC,QAAQ,EAAE,UAAU,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC;QAC9E,IAAI,YAAY,OAAO,CAAC,IAAI,EAAE,UAAU,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC;QACxE,IAAI,YAAY,OAAO,CAAC,KAAK,EAAE,UAAU,OAAO,CAAC,eAAe,CAAC,OAAO;QAExE,+CAA+C;QAC/C,MAAM,aAAa;QACnB,IAAI,aAAa;YACf,+CAA+C;YAC/C,MAAM,OAAO,IAAI,+IAAA,CAAA,UAAa,CAAC,GAAG,GAAG,GAAG,UAAU,CAAC,IAAI,+IAAA,CAAA,QAAW,CAAC,GAAG,SAAS,OAAO,CAAC,KAAK,EAAE;YAC9F,MAAM,SAAS,UAAU,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC,KAAK,SAAS,IAAI,GAAG,eAAe;;YAC7F,OAAO,CAAC,GAAG,UAAU,OAAO,CAAC,CAAC,GAAG;YACjC,OAAO,QAAQ,CAAC,IAAI,CAAC,QAAQ;YAC7B,OAAO,MAAM,CAAC,UAAU,OAAO,CAAC,CAAC,EAAE,UAAU,OAAO,CAAC,CAAC,GAAG,KAAK,UAAU,OAAO,CAAC,CAAC;YACjF,uBAAuB;YACvB,IAAI,kBAAkB,OAAO,EAAE,kBAAkB,OAAO,CAAC,OAAO,GAAG;QACrE,OAAO;YACL,eAAe;YACf,OAAO,QAAQ,CAAC,IAAI,CAAC,UAAU,OAAO;YACtC,OAAO,QAAQ,CAAC,CAAC,GAAG;YACpB,OAAO,QAAQ,CAAC,KAAK,GAAG;YACxB,OAAO,QAAQ,CAAC,CAAC,GAAG,SAAS,OAAO,CAAC,GAAG;YACxC,OAAO,QAAQ,CAAC,CAAC,GAAG,SAAS,OAAO,CAAC,KAAK;YAC1C,OAAO,QAAQ,CAAC,CAAC,GAAG;YACpB,uBAAuB;YACvB,IAAI,kBAAkB,OAAO,EAAE,kBAAkB,OAAO,CAAC,OAAO,GAAG;QACrE;QAEA,sCAAsC;QACtC,IAAI,kBAAkB,OAAO,EAAE;YAC7B,MAAM,OAAO,kBAAkB,OAAO;YACtC,MAAM,SAAS,IAAI,+IAAA,CAAA,UAAa,CAAC,UAAU,OAAO,CAAC,CAAC,EAAE,GAAG,UAAU,OAAO,CAAC,CAAC;YAC5E,KAAK,QAAQ,CAAC,IAAI,CAAC,QAAQ;YAC3B,KAAK,QAAQ,CAAC,CAAC,GAAG,SAAS,OAAO,CAAC,KAAK;QAC1C;IACF;IAEA,OAAO;AACV;AAEA,kGAAkG;AAClG,MAAM,aAAa;AAEZ,SAAS;IACd,MAAM,SAAS,SAAS,aAAa,CAAC;IACtC,OAAO,KAAK,GAAG;IACf,OAAO,MAAM,GAAG;IAChB,MAAM,UAAU,OAAO,UAAU,CAAC;IAClC,QAAQ,SAAS,GAAG;IACpB,QAAQ,QAAQ,CAAC,GAAG,GAAG,KAAK;IAC5B,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,IAAK;QAC7B,QAAQ,SAAS,GAAG,CAAC,IAAI,EAAE,KAAK,KAAK,MAAM,KAAK,GAAG,OAAO,EAAE,KAAK,KAAK,MAAM,KAAK,GAAG,EAAE,CAAC;QACvF,QAAQ,QAAQ,CAAC,KAAK,MAAM,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,GAAG;IAChE;IACA,MAAM,eAAe,IAAI,+IAAA,CAAA,gBAAmB,CAAC;IAC7C,aAAa,KAAK,GAAG,+IAAA,CAAA,iBAAoB;IACzC,aAAa,KAAK,GAAG,+IAAA,CAAA,iBAAoB;IACzC,aAAa,MAAM,CAAC,GAAG,CAAC,IAAI;IAC5B,OAAO;QAAE;IAAa;AACxB;AAEO,SAAS,gBAAgB,QAAa;IAC3C,OAAO;QACL,OAAO,IAAI,+IAAA,CAAA,sBAAyB,CAAC;YAAE,OAAO;YAAU,KAAK,SAAS,YAAY;QAAC;QACnF,YAAY,IAAI,+IAAA,CAAA,sBAAyB,CAAC;YAAE,OAAO;QAAS;QAC5D,OAAO,IAAI,+IAAA,CAAA,oBAAuB,CAAC;YACjC,OAAO;YACP,WAAW;YACX,aAAa;YACb,SAAS;QACX;QACA,OAAO,IAAI,+IAAA,CAAA,sBAAyB,CAAC;YAAE,OAAO;QAAS;QACvD,MAAM,IAAI,+IAAA,CAAA,sBAAyB,CAAC;YAAE,OAAO;QAAS;QACtD,OAAO,IAAI,+IAAA,CAAA,sBAAyB,CAAC;YAAE,OAAO;QAAS;QACvD,SAAS,IAAI,+IAAA,CAAA,oBAAuB,CAAC;YACnC,OAAO;YACP,UAAU;YACV,mBAAmB;QACrB;QACA,UAAU,IAAI,+IAAA,CAAA,sBAAyB,CAAC;YAAE,OAAO;QAAS;IAC5D;AACF;AAGO,SAAS,OAAO,EAAE,SAAS,EAAsB;IACtD,qBACE,8OAAC;QAAK,cAAY,CAAC,KAAK,EAAE,GAAG;QAAG,aAAa;QAAC,UAAU;YAAC;YAAG;YAAG;SAAE;;0BAC/D,8OAAC;gBAAc,MAAM;oBAAC,aAAa;oBAAG,aAAa;iBAAE;;;;;;0BACrD,8OAAC;gBAAqB,OAAO,AAAC,UAAU,UAAU,EAAU,SAAS;;;;;;;;;;;;AAG3E;AAGO,SAAS,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,EAAE,SAAS,UAAU,EAAuD;IACvH,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAmC,EAAE;IAC5D,IAAI,UAAU,OAAO,CAAC,MAAM,KAAK,GAAG;QAClC,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,IAAK;YAC9B,UAAU,OAAO,CAAC,IAAI,CAAC;gBAAC,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI,SAAS;gBAAG;gBAAG,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI,SAAS;aAAE;QACpG;IACF;IAEA,qBACE,8OAAC;kBACE,UAAU,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG;YACzB,MAAM,IAAI,MAAM,KAAK,MAAM,KAAK;YAChC,qBACE,8OAAC;gBAAc,UAAU;gBAAG,OAAO;oBAAC;oBAAG;oBAAG;iBAAE;gBAAE,cAAY,KAAK,MAAM,KAAK,KAAK,EAAE,GAAG;;kCAClF,8OAAC;wBAAK,UAAU;4BAAC;4BAAG;4BAAG;yBAAE;wBAAE,UAAU;wBAAC,aAAa;;0CACjD,8OAAC;gCAAiB,MAAM;oCAAC;oCAAM;oCAAM;oCAAG;iCAAE;;;;;;0CAC1C,8OAAC;gCAAqB,OAAO,AAAC,UAAU,KAAK,EAAU,SAAS;;;;;;;;;;;;kCAElE,8OAAC;wBAAK,UAAU;4BAAC;4BAAG;4BAAK;yBAAE;wBAAE,UAAU;wBAAC,aAAa;;0CACnD,8OAAC;gCAAa,MAAM;oCAAC;oCAAK;oCAAG;iCAAE;;;;;;0CAC/B,8OAAC;gCAAqB,OAAO,AAAC,UAAU,QAAQ,EAAU,SAAS;;;;;;;;;;;;kCAErE,8OAAC;wBAAK,UAAU;4BAAC;4BAAG;4BAAM;yBAAE;wBAAE,UAAU;wBAAC,aAAa;;0CACpD,8OAAC;gCAAa,MAAM;oCAAC;oCAAK;oCAAK;iCAAE;;;;;;0CACjC,8OAAC;gCAAqB,OAAO,AAAC,UAAU,QAAQ,EAAU,SAAS;;;;;;;;;;;;;eAX3D;;;;;QAehB;;;;;;AAGN;AAGO,SAAS,MAAM,EAAE,SAAS,EAAsB;IACrD,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAsB;IAC5C,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD;IAE1B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,IAAI,SAAS,OAAO;QAC1B,OAAO,GAAG,CAAC;QACX,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC;QAC1B,OAAO;YACL,IAAI;gBAAE,OAAO,MAAM,CAAC;YAAG,EAAE,OAAM,CAAC;QAClC;IACF,GAAG;QAAC;KAAO;IAEX,MAAM,MAAM,AAAC,UAAU,IAAI,IAAY,IAAI,+IAAA,CAAA,uBAA0B,CAAC;QAAE,OAAO;IAAS;IAExF,qBACE,8OAAC;QAAM,KAAK;;0BACV,8OAAC;gBAAK,UAAU;oBAAC,CAAC;oBAAM;oBAAG,CAAC;iBAAK;gBAAE,UAAU;;kCAC3C,8OAAC;wBAAY,MAAM;4BAAC;4BAAM;4BAAM;yBAAI;;;;;;kCACpC,8OAAC;wBAAsB,GAAI,GAAG;;;;;;;;;;;;0BAEhC,8OAAC;gBAAK,UAAU;oBAAC,CAAC;oBAAM,CAAC;oBAAM,CAAC;iBAAI;gBAAE,UAAU;;kCAC9C,8OAAC;wBAAY,MAAM;4BAAC;4BAAM;4BAAM;yBAAI;;;;;;kCACpC,8OAAC;wBAAsB,GAAI,GAAG;;;;;;;;;;;;0BAEhC,8OAAC;gBAAK,UAAU;oBAAC;oBAAM;oBAAG,CAAC;iBAAK;gBAAE,UAAU;;kCAC1C,8OAAC;wBAAY,MAAM;4BAAC;4BAAM;4BAAM;yBAAI;;;;;;kCACpC,8OAAC;wBAAsB,GAAI,GAAG;;;;;;;;;;;;0BAEhC,8OAAC;gBAAK,UAAU;oBAAC;oBAAM,CAAC;oBAAM,CAAC;iBAAI;gBAAE,UAAU;;kCAC7C,8OAAC;wBAAY,MAAM;4BAAC;4BAAM;4BAAM;yBAAI;;;;;;kCACpC,8OAAC;wBAAsB,GAAI,GAAG;;;;;;;;;;;;;;;;;;AAItC;AAGe,SAAS;IACtB,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE,IAAM,kBAAkB,EAAE;IACnD,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE,IAAM,gBAAgB,WAAW;QAAC;KAAS;IAEpE,sCAAsC;IACvC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEtC,sBAAsB;IACvB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE9C,+BAA+B;IAChC,MAAM,CAAC,OAAO,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY;QAAC;QAAkB;KAAY;IACnE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,MAAM,CAAC,EAAE;IAE1D,MAAM,eAAe,CAAC;QACpB,YAAY,EAAE,MAAM,CAAC,KAAK;IAC5B;IAEA,qBAAqB;IACrB,wBAAwB;IACxB,qBAAqB;IACrB,aAAa;IACb,gDAAgD;IAChD,uCAAuC;IACvC,8BAA8B;IAC9B,6EAA6E;IAC7E,0BAA0B;IAC1B,0DAA0D;IAC1D,uBAAuB;IACvB,sDAAsD;IACtD,SAAS;IACT,UAAU;IACV,sCAAsC;IACtC,UAAU;IAET,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,oEAAoE;QACpE,WAAW;IACb,GAAG,EAAE;IAEL,IAAI,CAAC,SAAS,qBAAO,8OAAC;QAAI,OAAO;YAAE,OAAO;YAAQ,QAAQ;QAAO;;;;;;IAEjE,qBACE,8OAAC,mIAAA,CAAA,iBAAc;kBACb,cAAA,8OAAC;YAAI,OAAO;gBAAE,OAAO;gBAAQ,QAAQ;gBAAS,UAAU;YAAW;;8BACjE,8OAAC,mMAAA,CAAA,SAAM;oBAAC,IAAG;oBAAc,OAAO;oBAAC,QAAQ;wBAAE,UAAU;4BAAC;4BAAG;4BAAK;yBAAE;wBAAE,KAAK;oBAAG;;sCACxE,8OAAC;4BAAa,WAAW;;;;;;sCACzB,8OAAC;4BAAiB,UAAU;gCAAC;gCAAI;gCAAI;6BAAG;4BAAE,WAAW;4BAAK,UAAU;;;;;;sCAEpE,8OAAC;4BAAa,WAAW;4BAAW,aAAa;4BAAa,WAAY,WAAW,CAAC,QAAQ,EAAE,UAAU,GAAG;;;;;;sCAC7G,8OAAC;4BAAO,WAAW;;;;;;sCACnB,8OAAC;4BAAM,WAAW;4BAAW,OAAO;4BAAI,QAAQ;;;;;;wBAC/C,CAAC,6BAAe,8OAAC;4BAAM,WAAW;;;;;;;;;;;;8BAIrC,8OAAC;oBAAI,OAAO;wBAAE,UAAU;wBAAY,KAAK;wBAAI,OAAO;wBAAI,YAAY;wBAAmB,SAAS;wBAAG,cAAc;wBAAG,OAAO;oBAAQ;;sCACjI,8OAAC;4BAAM,OAAO;gCAAE,SAAS;gCAAQ,YAAY;gCAAU,KAAK;4BAAE;;8CAC5D,8OAAC;oCAAM,MAAK;oCAAW,SAAS;oCAAa,UAAU,IAAM,eAAe,CAAA,IAAK,CAAC;;;;;;8CAClF,8OAAC;oCAAK,OAAO;wCAAE,UAAU;oCAAG;8CAAG;;;;;;;;;;;;sCAEjC,8OAAC;4BAAI,OAAO;gCAAE,WAAW;4BAAE;;8CACzB,8OAAC;oCAAM,OAAO;wCAAE,UAAU;oCAAG;8CAAG;;;;;;8CAChC,8OAAC;oCAAO,OAAO;oCAAU,UAAU;oCAAc,OAAO;wCAAE,SAAS;wCAAS,WAAW;oCAAE;;sDACvF,8OAAC;4CAAO,OAAM;sDAAG;;;;;;wCACf,OAAO,GAAG,CAAC,CAAA,kBACV,8OAAC;gDAAe,OAAO;0DAAI;+CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ9B","debugId":null}}]
}