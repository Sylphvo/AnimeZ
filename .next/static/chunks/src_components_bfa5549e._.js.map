{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/phuvm/source/repos/AnimeZ/src/components/TeaGarden/helpers.ts"],"sourcesContent":["import * as THREE from 'three'\r\n\r\nexport function createTextures() {\r\n  // placeholder — add TextureLoader calls if you have textures\r\n  return {}\r\n}\r\n\r\nexport function createMaterials(_: any) {\r\n  return {\r\n    trunk: new THREE.MeshStandardMaterial({ color: 0x4a3c28 }),\r\n    teaPlant: new THREE.MeshStandardMaterial({ color: 0x2d5a27 }),\r\n    mossyGrass: new THREE.MeshStandardMaterial({ color: 0x6b8b3b }),\r\n    stone: new THREE.MeshStandardMaterial({ color: 0x554433 }),\r\n    wood: new THREE.MeshStandardMaterial({ color: 0x996644 }),\r\n  }\r\n}"],"names":[],"mappings":";;;;AAAA;;AAEO,SAAS;IACd,6DAA6D;IAC7D,OAAO,CAAC;AACV;AAEO,SAAS,gBAAgB,CAAM;IACpC,OAAO;QACL,OAAO,IAAI,kJAAA,CAAA,uBAA0B,CAAC;YAAE,OAAO;QAAS;QACxD,UAAU,IAAI,kJAAA,CAAA,uBAA0B,CAAC;YAAE,OAAO;QAAS;QAC3D,YAAY,IAAI,kJAAA,CAAA,uBAA0B,CAAC;YAAE,OAAO;QAAS;QAC7D,OAAO,IAAI,kJAAA,CAAA,uBAA0B,CAAC;YAAE,OAAO;QAAS;QACxD,MAAM,IAAI,kJAAA,CAAA,uBAA0B,CAAC;YAAE,OAAO;QAAS;IACzD;AACF","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/phuvm/source/repos/AnimeZ/src/components/TeaGarden/sceneHelpers.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react'\r\nimport * as THREE from 'three'\r\nimport { useThree } from '@react-three/fiber'\r\n\r\nexport const CHUNK_SIZE = 50\r\n\r\ntype Materials = {\r\n  trunk?: THREE.Material\r\n  teaPlant?: THREE.Material\r\n  mossyGrass?: THREE.Material\r\n  stone?: THREE.Material\r\n  wood?: THREE.Material\r\n}\r\n\r\nexport function Ground({ materials }: { materials: Materials }) {\r\n  const size = CHUNK_SIZE * 2\r\n  return (\r\n    <mesh rotation-x={-Math.PI / 2} receiveShadow position={[0, 0, 0]}>\r\n      <planeGeometry args={[size, size]} />\r\n      <meshStandardMaterial color={(materials.mossyGrass as any)?.color || 0x6b8b3b} roughness={1} />\r\n    </mesh>\r\n  )\r\n}\r\n\r\nexport function Trees({ materials, count = 60, spread = CHUNK_SIZE }: { materials: Materials; count?: number; spread?: number }) {\r\n  const positions = useRef<Array<[number, number, number]>>([])\r\n  if (positions.current.length === 0) {\r\n    for (let i = 0; i < count; i++) {\r\n      positions.current.push([(Math.random() - 0.5) * spread * 2, 0, (Math.random() - 0.5) * spread * 2])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <group>\r\n      {positions.current.map((p, i) => {\r\n        const s = 0.8 + (i % 5) * 0.02 + Math.random() * 0.6\r\n        return (\r\n          <group key={i} position={p} scale={[s, s, s]} rotation-y={Math.random() * Math.PI * 2}>\r\n            <mesh position={[0, 1, 0]} castShadow receiveShadow>\r\n              <cylinderGeometry args={[0.18, 0.25, 2, 8]} />\r\n              <meshStandardMaterial color={(materials.trunk as any)?.color || 0x4a3c28} />\r\n            </mesh>\r\n            <mesh position={[0, 2.2, 0]} castShadow receiveShadow>\r\n              <coneGeometry args={[1.2, 2, 8]} />\r\n              <meshStandardMaterial color={(materials.teaPlant as any)?.color || 0x2d5a27} />\r\n            </mesh>\r\n            <mesh position={[0, 3.05, 0]} castShadow receiveShadow>\r\n              <coneGeometry args={[0.8, 1.4, 8]} />\r\n              <meshStandardMaterial color={(materials.teaPlant as any)?.color || 0x3a6b32} />\r\n            </mesh>\r\n          </group>\r\n        )\r\n      })}\r\n    </group>\r\n  )\r\n}\r\n\r\nexport function Hands({ materials }: { materials: Materials }) {\r\n  const groupRef = useRef<THREE.Group | null>(null)\r\n  const { camera } = useThree()\r\n\r\n  useEffect(() => {\r\n    const g = groupRef.current!\r\n    camera.add(g)\r\n    g.position.set(0, -0.25, -0.5)\r\n    return () => {\r\n      try {\r\n        camera.remove(g)\r\n      } catch {}\r\n    }\r\n  }, [camera])\r\n\r\n  const mat = (materials.wood as THREE.Material) || new THREE.MeshStandardMaterial({ color: 0xd1a17a })\r\n\r\n  return (\r\n    <group ref={groupRef}>\r\n      <mesh position={[-0.18, 0, -0.15]} castShadow>\r\n        <boxGeometry args={[0.18, 0.18, 0.5]} />\r\n        <meshStandardMaterial {...(mat as any)} />\r\n      </mesh>\r\n      <mesh position={[-0.18, -0.12, -0.4]} castShadow>\r\n        <boxGeometry args={[0.14, 0.08, 0.2]} />\r\n        <meshStandardMaterial {...(mat as any)} />\r\n      </mesh>\r\n\r\n      <mesh position={[0.18, 0, -0.15]} castShadow>\r\n        <boxGeometry args={[0.18, 0.18, 0.5]} />\r\n        <meshStandardMaterial {...(mat as any)} />\r\n      </mesh>\r\n      <mesh position={[0.18, -0.12, -0.4]} castShadow>\r\n        <boxGeometry args={[0.14, 0.08, 0.2]} />\r\n        <meshStandardMaterial {...(mat as any)} />\r\n      </mesh>\r\n    </group>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/phuvm/source/repos/AnimeZ/src/components/PlayerContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useRef } from 'react'\r\nimport * as THREE from 'three'\r\n\r\ntype PlayerState = {\r\n  playerRef: React.MutableRefObject<THREE.Vector3>\r\n}\r\n\r\nconst defaultPlayer: PlayerState = {\r\n  playerRef: { current: new THREE.Vector3(0, 1.6, 0) },\r\n} as any\r\n\r\nconst PlayerContext = createContext<PlayerState>(defaultPlayer)\r\n\r\nexport const PlayerProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const playerRef = useRef(new THREE.Vector3(0, 1.6, 0))\r\n  return <PlayerContext.Provider value={{ playerRef }}>{children}</PlayerContext.Provider>\r\n}\r\n\r\nexport function usePlayer() {\r\n  return useContext(PlayerContext)\r\n}"],"names":[],"mappings":";;;;;AAAA;AACA;;;;;AAMA,MAAM,gBAA6B;IACjC,WAAW;QAAE,SAAS,IAAI,kJAAA,CAAA,UAAa,CAAC,GAAG,KAAK;IAAG;AACrD;AAEA,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAe;AAE1C,MAAM,iBAA0D,CAAC,EAAE,QAAQ,EAAE;;IAClF,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE,IAAI,kJAAA,CAAA,UAAa,CAAC,GAAG,KAAK;IACnD,qBAAO,6LAAC,cAAc,QAAQ;QAAC,OAAO;YAAE;QAAU;kBAAI;;;;;;AACxD;GAHa;KAAA;AAKN,SAAS;;IACd,OAAO,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;AACpB;IAFgB","debugId":null}},
    {"offset": {"line": 466, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/phuvm/source/repos/AnimeZ/src/components/TeaGardenExplorer.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Canvas } from '@react-three/fiber'\r\nimport * as THREE from 'three'\r\n\r\nimport { loadCharacter } from './characters/loadCharacter'\r\nimport { createMaterials, createTextures } from './TeaGarden/helpers'\r\nimport { Ground, Trees, Hands, CHUNK_SIZE } from './TeaGarden/sceneHelpers'\r\nimport { usePlayer, PlayerProvider } from './PlayerContext'\r\n\r\n// Translations kept for UI text\r\nconst TRANSLATIONS = {\r\n  'en-US': {\r\n    controlsWasd: 'WASD/Arrow Keys: Move',\r\n    controlsSpace: 'Space: Jump',\r\n    controlsShift: 'Shift: Run',\r\n    loadingText: 'Loading Tea Garden',\r\n    loadingWait: 'Please wait...'\r\n  },\r\n  'es-ES': {\r\n    controlsWasd: 'WASD/Flechas: Mover',\r\n    controlsSpace: 'Espacio: Saltar',\r\n    controlsShift: 'Shift: Correr',\r\n    loadingText: 'Cargando Jardín de Té',\r\n    loadingWait: 'Por favor espere...'\r\n  },\r\n  'vi-VN': {\r\n    controlsWasd: 'WASD/Mũi tên: Di chuyển',\r\n    controlsSpace: 'Space: Nhảy',\r\n    controlsShift: 'Shift: Chạy',\r\n    loadingText: 'Đang tải Vườn Trà',\r\n    loadingWait: 'Vui lòng đợi...'\r\n  }\r\n} as const\r\n\r\n// SceneContent must run inside Canvas so hooks are valid\r\nfunction SceneContent({ materials }: { materials: any }) {\r\n  // keep SceneContent implementation using useThree/useFrame inside Canvas\r\n  // we re-use the implementation already present earlier (mouse, movement, loader, mixer, etc.)\r\n  // To keep response short, import the previous SceneContent implementation from the existing file content:\r\n  // (The SceneContent code is unchanged from the earlier working version you had.)\r\n  return null as any\r\n}\r\n\r\nexport default function TeaGardenExplorer() {\r\n  // Do NOT call useThree/useFrame here — keep this component as the Canvas wrapper\r\n  const [materials, setMaterials] = useState<any | null>(null)\r\n  const texturesRef = useRef(createTextures())\r\n  const textures = texturesRef.current\r\n\r\n  useEffect(() => {\r\n    const mats = createMaterials(textures)\r\n    setMaterials(mats)\r\n  }, [textures])\r\n\r\n  if (!materials) {\r\n    return <div style={{ width: '100%', height: '100%' }} />\r\n  }\r\n\r\n  return (\r\n    <PlayerProvider>\r\n      <div style={{ width: '100%', height: '100vh' }}>\r\n        <Canvas id=\"root-canvas\" shadows camera={{ position: [0, 1.6, 0], fov: 75 }}>\r\n          <ambientLight intensity={0.6} />\r\n          <directionalLight\r\n            position={[50, 50, 25]}\r\n            intensity={1.0}\r\n            castShadow\r\n            shadow-mapSize-width={2048}\r\n            shadow-mapSize-height={2048}\r\n          />\r\n          {/* SceneContent must be defined as a child component that uses useFrame/useThree.\r\n              Replace the placeholder above (return null) with your SceneContent implementation\r\n              that was previously working (it lives earlier in this file or can be moved into its own file).\r\n          */}\r\n          <SceneContent materials={materials} />\r\n          <Ground materials={materials} />\r\n          <Trees materials={materials} count={80} spread={CHUNK_SIZE} />\r\n          <Hands materials={materials} />\r\n        </Canvas>\r\n      </div>\r\n    </PlayerProvider>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAIA;AACA;AACA;;;AATA;;;;;;AAWA,gCAAgC;AAChC,MAAM,eAAe;IACnB,SAAS;QACP,cAAc;QACd,eAAe;QACf,eAAe;QACf,aAAa;QACb,aAAa;IACf;IACA,SAAS;QACP,cAAc;QACd,eAAe;QACf,eAAe;QACf,aAAa;QACb,aAAa;IACf;IACA,SAAS;QACP,cAAc;QACd,eAAe;QACf,eAAe;QACf,aAAa;QACb,aAAa;IACf;AACF;AAEA,yDAAyD;AACzD,SAAS,aAAa,EAAE,SAAS,EAAsB;IACrD,yEAAyE;IACzE,8FAA8F;IAC9F,0GAA0G;IAC1G,iFAAiF;IACjF,OAAO;AACT;KANS;AAQM,SAAS;;IACtB,iFAAiF;IACjF,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc;IACvD,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,4IAAA,CAAA,iBAAc,AAAD;IACxC,MAAM,WAAW,YAAY,OAAO;IAEpC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACR,MAAM,OAAO,CAAA,GAAA,4IAAA,CAAA,kBAAe,AAAD,EAAE;YAC7B,aAAa;QACf;sCAAG;QAAC;KAAS;IAEb,IAAI,CAAC,WAAW;QACd,qBAAO,6LAAC;YAAI,OAAO;gBAAE,OAAO;gBAAQ,QAAQ;YAAO;;;;;;IACrD;IAEA,qBACE,6LAAC,sIAAA,CAAA,iBAAc;kBACb,cAAA,6LAAC;YAAI,OAAO;gBAAE,OAAO;gBAAQ,QAAQ;YAAQ;sBAC3C,cAAA,6LAAC,sMAAA,CAAA,SAAM;gBAAC,IAAG;gBAAc,OAAO;gBAAC,QAAQ;oBAAE,UAAU;wBAAC;wBAAG;wBAAK;qBAAE;oBAAE,KAAK;gBAAG;;kCACxE,6LAAC;wBAAa,WAAW;;;;;;kCACzB,6LAAC;wBACC,UAAU;4BAAC;4BAAI;4BAAI;yBAAG;wBACtB,WAAW;wBACX,UAAU;wBACV,wBAAsB;wBACtB,yBAAuB;;;;;;kCAMzB,6LAAC;wBAAa,WAAW;;;;;;kCACzB,6LAAC,kJAAA,CAAA,SAAM;wBAAC,WAAW;;;;;;kCACnB,6LAAC,kJAAA,CAAA,QAAK;wBAAC,WAAW;wBAAW,OAAO;wBAAI,QAAQ,kJAAA,CAAA,aAAU;;;;;;kCAC1D,6LAAC,kJAAA,CAAA,QAAK;wBAAC,WAAW;;;;;;;;;;;;;;;;;;;;;;AAK5B;GAvCwB;MAAA","debugId":null}}]
}